{"version":3,"file":"719.b008ba7e.js","mappings":"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","sources":["webpack://srs-ui/./src/app/ServiceRegistry/ApicurioRegistry.tsx","webpack://srs-ui/./src/app/ServiceRegistry/ApicurioRegistryFederated.tsx","webpack://srs-ui/./src/app/components/MASErrorBoundary/MASErrorBoundary.tsx","webpack://srs-ui/./src/app/utils/error.ts","webpack://srs-ui/./src/app/utils/utils.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { PageSection, PageSectionVariants } from '@patternfly/react-core';\nimport { Configuration, RegistryRest, RegistriesApi } from '@rhoas/registry-management-sdk';\nimport { useAuth, useConfig } from '@rhoas/app-services-ui-shared';\nimport { ServiceRegistryDrawer, ServiceRegistryHeader } from './components';\nimport { useRootModalContext, MODAL_TYPES, MASLoading } from '@app/components';\n\nexport type ApicurioRegistryProps = {\n  render: (registry: RegistryRest | undefined) => JSX.Element;\n  breadcrumbId: string;\n};\n\nconst ApicurioRegistry: React.FC<ApicurioRegistryProps> = ({ render, breadcrumbId }) => {\n  const { t } = useTranslation();\n  const auth = useAuth();\n  const {\n    srs: { apiBasePath: basePath },\n  } = useConfig();\n  const { tenantId } = useParams<{ tenantId: string }>();\n  const { showModal } = useRootModalContext();\n  const [isExpandedDrawer, setIsExpandedDrawer] = useState<boolean>(false);\n  const [registry, setRegistry] = useState<RegistryRest | undefined>(undefined);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const fetchRegistry = async () => {\n    const accessToken = await auth?.srs.getToken();\n    setLoading(true);\n    const api = new RegistriesApi(\n      new Configuration({\n        accessToken,\n        basePath,\n      })\n    );\n    if (accessToken && tenantId) {\n      await api\n        .getRegistry(tenantId)\n        .then((res) => {\n          setRegistry(res?.data);\n          setLoading(false);\n        })\n        .catch((error) => {\n          setLoading(false);\n          //todo: handle error\n        });\n    }\n  };\n\n  useEffect(() => {\n    fetchRegistry();\n  }, []);\n\n  const onConnectToRegistry = () => {\n    setIsExpandedDrawer(true);\n  };\n\n  const onCloseDrawer = () => {\n    setIsExpandedDrawer(false);\n  };\n\n  const onDeleteRegistry = (registry: RegistryRest | undefined) => {\n    const { name, status } = registry || {};\n    showModal(MODAL_TYPES.DELETE_SERVICE_REGISTRY, {\n      shouldRedirect: true,\n      serviceRegistryStatus: status,\n      selectedItemData: registry,\n      title: `${t('common.delete_service_registry_title')}?`,\n      confirmButtonProps: {\n        label: t('common.delete'),\n      },\n      textProps: {\n        description: t('common.delete_service_registry_description', { name }),\n      },\n    });\n  };\n\n  if (loading) {\n    return (\n      <PageSection variant={PageSectionVariants.light} padding={{ default: 'noPadding' }}>\n        <MASLoading />\n      </PageSection>\n    );\n  }\n\n  return (\n    <ServiceRegistryDrawer\n      isExpanded={isExpandedDrawer}\n      isLoading={registry === undefined}\n      onClose={onCloseDrawer}\n      registry={registry}\n    >\n      <ServiceRegistryHeader\n        onConnectToRegistry={onConnectToRegistry}\n        onDeleteRegistry={onDeleteRegistry}\n        breadcrumbId={breadcrumbId}\n        serviceRegistryDetails={registry}\n      />\n      {render && render(registry)}\n    </ServiceRegistryDrawer>\n  );\n};\n\nexport { ApicurioRegistry };\n","import React from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport { ApicurioRegistry, ApicurioRegistryProps } from './ApicurioRegistry';\nimport { RootModal } from '@app/components';\nimport srsi18n from '@i18n/i18n';\n\ntype ApicurioRegistryFederatedProps = ApicurioRegistryProps;\n\nconst ApicurioRegistryFederated: React.FC<ApicurioRegistryFederatedProps> = ({ render, breadcrumbId }) => {\n  return (\n    <I18nextProvider i18n={srsi18n}>\n      <RootModal>\n        <ApicurioRegistry render={render} breadcrumbId={breadcrumbId} />\n      </RootModal>\n    </I18nextProvider>\n  );\n};\n\nexport default ApicurioRegistryFederated;\n","import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport { PageSection, Button } from '@patternfly/react-core';\nimport { MASEmptyState, MASEmptyStateVariant } from '@app/components';\nimport './MASErrorBoundary.css';\n\ntype Props = WithTranslation &\n  RouteComponentProps & {\n    children?: ReactNode;\n  };\n\ntype State = {\n  hasError?: boolean;\n};\n\nclass MASErrorBoundary extends Component<Props, State> {\n  state: State = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(_: Error): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('error:', error, errorInfo);\n  }\n\n  onClickButton = () => {\n    const { history } = this.props;\n    this.setState({ hasError: false });\n    history && history.push('/');\n  };\n\n  render() {\n    const { t } = this.props;\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return (\n        <PageSection padding={{ default: 'noPadding' }} isFilled>\n          <MASEmptyState\n            emptyStateProps={{\n              variant: MASEmptyStateVariant.UnexpectedError,\n            }}\n            emptyStateIconProps={{\n              className: 'icon-color',\n            }}\n            titleProps={{\n              title: t('common.something_went_wrong'),\n            }}\n            emptyStateBodyProps={{\n              body: t('unexpected_error'),\n            }}\n          >\n            <Button onClick={this.onClickButton}>{t('common.go_to_kafka_instances')}</Button>\n          </MASEmptyState>\n        </PageSection>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nconst MASErrorBoundaryComponent = withRouter(withTranslation()(MASErrorBoundary));\nexport { MASErrorBoundaryComponent as MASErrorBoundary };\n","import { AxiosError } from 'axios';\n\nexport interface IApiErrorData {\n  code: string;\n  href: string;\n  id: number;\n  kind: string;\n  reason: string;\n}\n\nconst isServiceApiError = (error: Error): error is AxiosError<IApiErrorData> => {\n  return (error as AxiosError<IApiErrorData>).response?.data.code !== undefined;\n};\n\nenum ErrorCodes {\n  USER_ALREADY_HAVE_TRIAL_INSTANCE = 'SRS-MGMT-13',\n  INSUFFICIENT_QUOTA = 'SRS-MGMT-14',\n  INSUFFICIENT_STANDARD_QUOTA='SRS-MGMT-7',\n  FAILED_TO_CHECK_QUOTA = 'SRS-MGMT-11',\n}\n\nexport { isServiceApiError, ErrorCodes };\n","import { formatDistance } from 'date-fns';\n\nfunction accessibleRouteChangeHandler() {\n  return window.setTimeout(() => {\n    const mainContainer = document.getElementById('primary-app-container');\n    if (mainContainer) {\n      mainContainer.focus();\n    }\n  }, 50);\n}\n\n\nconst getModalAppendTo = (): HTMLElement | undefined => document.querySelector('#qs-content') as HTMLElement || document.body;\n\nconst MAX_SERVICE_REGISTRY_NAME_LENGTH = 32;\nconst MAX_SERVICE_REGISTRY_DESC_LENGTH = 255;\n\nconst statusOptions = [\n  { value: 'ready', label: 'Ready' },\n  { value: 'failed', label: 'Failed' },\n  { value: 'accepted', label: 'Creation pending' },\n  { value: 'provisioning', label: 'Creation in progress' },\n  { value: 'preparing', label: 'Creation in progress' },\n  { value: 'deprovision', label: 'Deletion in progress' },\n  { value: 'deleting', label: 'Deletion in progress' },\n];\n\nconst getFormattedDate = (date: string | Date, translatePostfix: string): string => {\n  date = typeof date === 'string' ? new Date(date) : date;\n  return formatDistance(date, new Date()) + ' ' + translatePostfix;\n};\n\nenum InstanceType {\n  eval = 'eval',\n  standard = 'standard',\n}\n\nexport {\n  accessibleRouteChangeHandler,\n  getModalAppendTo,\n  MAX_SERVICE_REGISTRY_NAME_LENGTH,\n  MAX_SERVICE_REGISTRY_DESC_LENGTH,\n  statusOptions,\n  getFormattedDate,\n  InstanceType\n};"],"names":["ApicurioRegistry","render","breadcrumbId","t","useTranslation","auth","useAuth","basePath","useConfig","tenantId","useParams","showModal","useState","isExpandedDrawer","setIsExpandedDrawer","undefined","registry","setRegistry","loading","setLoading","useEffect","srs","getToken","accessToken","api","RegistriesApi","Configuration","getRegistry","then","res","data","catch","error","PageSection","variant","PageSectionVariants","padding","default","isExpanded","isLoading","onClose","onConnectToRegistry","onDeleteRegistry","name","status","shouldRedirect","serviceRegistryStatus","selectedItemData","title","confirmButtonProps","label","textProps","description","serviceRegistryDetails","I18nextProvider","i18n","state","hasError","onClickButton","history","props","setState","push","getDerivedStateFromError","_","componentDidCatch","errorInfo","console","this","isFilled","MASEmptyState","emptyStateProps","emptyStateIconProps","className","titleProps","emptyStateBodyProps","body","Button","onClick","children","Component","withRouter","withTranslation","ErrorCodes","isServiceApiError","response","code","InstanceType","getModalAppendTo","document","querySelector","MAX_SERVICE_REGISTRY_NAME_LENGTH","statusOptions","value","getFormattedDate","date","translatePostfix","Date","formatDistance"],"sourceRoot":""}