{"version":3,"file":"576.2a51d77f.js","mappings":"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","sources":["webpack://srs-ui/./node_modules/@patternfly/react-icons/dist/js/icons/arrow-right-icon.js","webpack://srs-ui/./node_modules/@patternfly/react-icons/dist/js/icons/wrench-icon.js","webpack://srs-ui/./src/ServiceRegistry/ApicurioRegistry.tsx","webpack://srs-ui/./src/ServiceRegistry/ApicurioRegistryFederated.tsx","webpack://srs-ui/./src/ServiceRegistry/components/ServiceRegistryMapping/EmptyState.tsx","webpack://srs-ui/./src/ServiceRegistry/components/ServiceRegistryMapping/Loading.tsx","webpack://srs-ui/./src/ServiceRegistry/components/ServiceRegistryMapping/ServiceRegistryMapping.tsx","webpack://srs-ui/./src/ServiceRegistry/components/ServiceRegistryMapping/ServiceRegistryMappingFederated.tsx","webpack://srs-ui/./src/components/RootModal/ModalContext.tsx","webpack://srs-ui/./src/components/RootModal/types.ts","webpack://srs-ui/./src/components/RootModal/useModal.ts","webpack://srs-ui/./src/components/MASErrorBoundary/MASErrorBoundary.tsx","webpack://srs-ui/./src/utils/error.ts"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.ArrowRightIconConfig = {\n  name: 'ArrowRightIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ArrowRightIcon = require('../createIcon').createIcon(exports.ArrowRightIconConfig);\nexports[\"default\"] = exports.ArrowRightIcon;","\"use strict\"\nexports.__esModule = true;\nexports.WrenchIconConfig = {\n  name: 'WrenchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.WrenchIcon = require('../createIcon').createIcon(exports.WrenchIconConfig);\nexports[\"default\"] = exports.WrenchIcon;","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { PageSection, PageSectionVariants } from '@patternfly/react-core';\nimport {\n  Configuration,\n  Registry,\n  RegistriesApi,\n} from '@rhoas/registry-management-sdk';\nimport { useAuth, useConfig } from '@rhoas/app-services-ui-shared';\nimport { ServiceRegistryDrawer, ServiceRegistryHeader } from './components';\nimport { useModal, ModalType, MASLoading } from '@app/components';\nimport { useSharedContext } from '@app/context';\n\nexport type ApicurioRegistryProps = {\n  render: (registry: Registry | undefined) => JSX.Element;\n  breadcrumbId: string;\n};\n\nconst ApicurioRegistry: React.FC<ApicurioRegistryProps> = ({\n  render,\n  breadcrumbId,\n}) => {\n  const { t } = useTranslation(['service-registry']);\n  const auth = useAuth();\n  const {\n    srs: { apiBasePath: basePath },\n  } = useConfig();\n  const { tenantId } = useParams<{ tenantId: string }>();\n  const { showModal } = useModal();\n  const { renderDownloadArtifacts } = useSharedContext() || {};\n\n  const [isExpandedDrawer, setIsExpandedDrawer] = useState<boolean>(false);\n  const [registry, setRegistry] = useState<Registry | undefined>(undefined);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const fetchRegistry = useCallback(async () => {\n    const accessToken = await auth?.srs.getToken();\n    setLoading(true);\n    const api = new RegistriesApi(\n      new Configuration({\n        accessToken,\n        basePath,\n      })\n    );\n    if (accessToken && tenantId) {\n      await api\n        .getRegistry(tenantId)\n        .then((res) => {\n          setRegistry(res?.data);\n          setLoading(false);\n        })\n        .catch(() => {\n          setLoading(false);\n        });\n    }\n  }, [auth?.srs, basePath, tenantId]);\n\n  useEffect(() => {\n    fetchRegistry();\n  }, [fetchRegistry]);\n\n  const onConnectToRegistry = () => {\n    setIsExpandedDrawer(true);\n  };\n\n  const onCloseDrawer = () => {\n    setIsExpandedDrawer(false);\n  };\n\n  const onDeleteRegistry = (registry: Registry | undefined) => {\n    const { status } = registry || {};\n    showModal(ModalType.DeleteServiceRegistry, {\n      shouldRedirect: true,\n      status,\n      registry,\n      confirmButtonProps: {\n        label: t('common:delete'),\n      },\n      renderDownloadArtifacts,\n    });\n  };\n\n  if (loading) {\n    return (\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: 'noPadding' }}\n      >\n        <MASLoading />\n      </PageSection>\n    );\n  }\n\n  return (\n    <ServiceRegistryDrawer\n      isExpanded={isExpandedDrawer}\n      isLoading={registry === undefined}\n      onClose={onCloseDrawer}\n      registry={registry}\n    >\n      <ServiceRegistryHeader\n        onConnectToRegistry={onConnectToRegistry}\n        onDeleteRegistry={onDeleteRegistry}\n        breadcrumbId={breadcrumbId}\n        serviceRegistryDetails={registry}\n      />\n      {render && render(registry)}\n    </ServiceRegistryDrawer>\n  );\n};\n\nexport { ApicurioRegistry };\n","import { FC } from 'react';\nimport { ApicurioRegistry, ApicurioRegistryProps } from './ApicurioRegistry';\nimport { ServiceRegistryModalLoader, ModalProvider } from '@app/components';\nimport { SharedContext, SharedContextrops } from '@app/context';\n\ntype ApicurioRegistryFederatedProps = ApicurioRegistryProps & SharedContextrops;\n\nconst ApicurioRegistryFederated: FC<ApicurioRegistryFederatedProps> = ({\n  render,\n  breadcrumbId,\n  tokenEndPointUrl,\n  artifactId,\n  renderDownloadArtifacts,\n}) => {\n  return (\n    <SharedContext.Provider\n      value={{ tokenEndPointUrl, artifactId, renderDownloadArtifacts }}\n    >\n      <ModalProvider>\n        <ApicurioRegistry render={render} breadcrumbId={breadcrumbId} />\n        <ServiceRegistryModalLoader />\n      </ModalProvider>\n    </SharedContext.Provider>\n  );\n};\n\nexport default ApicurioRegistryFederated;\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  EmptyState as PFEmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateSecondaryActions,\n  ClipboardCopy,\n  Title,\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons/dist/js/icons/wrench-icon';\nimport { ArrowRightIcon } from '@patternfly/react-icons/dist/js/icons/arrow-right-icon';\n\nexport type EmptyStateProps = {\n  topicName: string;\n  basename: string;\n};\n\nexport const EmptyState: FC<EmptyStateProps> = ({\n  topicName,\n  basename,\n}: EmptyStateProps) => {\n  const { t } = useTranslation('service-registry');\n\n  return (\n    <PFEmptyState className='pf-u-pt-2xl pf-u-pt-3xl-on-md'>\n      <EmptyStateIcon icon={WrenchIcon} />\n      <Title headingLevel='h2' size='lg'>\n        {t('empty_state_title')}\n      </Title>\n      <EmptyStateBody>{t('empty_state_body')}</EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        <ClipboardCopy\n          isReadOnly\n          hoverTip='Copy'\n          clickTip='Copied'\n          className='pf-u-w-25'\n        >\n          {topicName + '-value'}\n        </ClipboardCopy>\n      </EmptyStateSecondaryActions>\n      <EmptyStateSecondaryActions>\n        <ClipboardCopy\n          isReadOnly\n          hoverTip='Copy'\n          clickTip='Copied'\n          className='pf-u-w-25'\n        >\n          {topicName + '-key'}\n        </ClipboardCopy>\n      </EmptyStateSecondaryActions>\n      <EmptyStateSecondaryActions>\n        <Link to={basename}>\n          {t('go_to_service_registry_instance_helper_text')} <ArrowRightIcon />\n        </Link>\n      </EmptyStateSecondaryActions>\n    </PFEmptyState>\n  );\n};\n","import { FC } from 'react';\nimport {\n  EmptyState as PFEmptyState,\n  EmptyStateSecondaryActions,\n  Bullseye,\n  Spinner,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { css } from '@patternfly/react-styles';\n\nexport const Loading: FC = () => {\n  const { t } = useTranslation('service-registry');\n\n  return (\n    <PFEmptyState className={css('pf-u-pt-2xl pf-u-pt-3xl-on-md')}>\n      <EmptyStateSecondaryActions>\n        <Bullseye>\n          <Spinner size='xl' />\n        </Bullseye>\n      </EmptyStateSecondaryActions>\n      <EmptyStateSecondaryActions>\n        <TextContent>\n          <Text component={TextVariants.h1}>{t('schema_loading')}</Text>\n        </TextContent>\n      </EmptyStateSecondaryActions>\n    </PFEmptyState>\n  );\n};\n","import {\n  useEffect,\n  useState,\n  memo,\n  FunctionComponent,\n  useCallback,\n} from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Select,\n  SelectVariant,\n  SelectOption,\n  Card,\n  CardTitle,\n  CardBody,\n  Grid,\n  GridItem,\n  SelectOptionObject,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Configuration,\n  Registry,\n  RegistriesApi,\n} from '@rhoas/registry-management-sdk';\nimport { useAuth, useConfig } from '@rhoas/app-services-ui-shared';\nimport { EmptyState } from './EmptyState';\nimport { Loading } from './Loading';\n\nexport type ServiceRegistryMappingProps = SchemasProps & {\n  basename: string;\n  topicName: string;\n};\n\ntype SchemasProps = {\n  renderSchema: (registry: Registry | undefined) => JSX.Element;\n  registry?: Registry | undefined;\n};\n\nconst Schemas: FunctionComponent<SchemasProps> = memo(\n  ({ renderSchema, registry }) => {\n    return (renderSchema && registry && renderSchema(registry)) || <></>;\n  }\n);\nSchemas.displayName = 'Schemas';\n\nexport const ServiceRegistryMapping: React.FC<ServiceRegistryMappingProps> = ({\n  renderSchema,\n  basename,\n  topicName,\n}) => {\n  const { t } = useTranslation('service-registry');\n  const auth = useAuth();\n  const {\n    srs: { apiBasePath: basePath },\n  } = useConfig() || { srs: { apiBasePath: '' } };\n  //states\n  const [registryItems, setRegistryItems] = useState<Registry[] | undefined>(\n    undefined\n  );\n  const [selectedRegistry, setSelectedRegistry] = useState<\n    string | SelectOptionObject\n  >();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [registry, setRegistry] = useState<Registry>();\n\n  const fetchRegistries = useCallback(async () => {\n    let page = 1;\n    const pageSize = 100;\n\n    const accessToken = await auth?.srs.getToken();\n    const api = new RegistriesApi(\n      new Configuration({\n        accessToken,\n        basePath,\n      })\n    );\n    /**\n     * Api works based on pagination and return 10 records by default.\n     * Getting data by calling api mupltiple times based on page size 100 if total is greater than 100.\n     */\n    const items = await (async (): Promise<Registry[]> => {\n      const response = await api.getRegistries(page, pageSize);\n      let { items } = response?.data;\n      const { total } = response?.data;\n\n      if (total > pageSize) {\n        const n = Math.ceil(total / pageSize);\n        for (let i = 1; i < n; i++) {\n          page += 1;\n          const response = await api.getRegistries(page, pageSize);\n          items = items?.concat(response?.data.items);\n        }\n        return items;\n      } else {\n        return items;\n      }\n    })();\n\n    setRegistryItems(items);\n  }, [auth?.srs, basePath]);\n\n  useEffect(() => {\n    fetchRegistries();\n  }, [fetchRegistries]);\n\n  useEffect(() => {\n    const filteredRegistry = registryItems?.filter(\n      (r) => r.name === selectedRegistry\n    )[0];\n    setRegistry(filteredRegistry);\n  }, [selectedRegistry, registryItems]);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelectInstance = (\n    event: React.MouseEvent<Element, MouseEvent> | React.ChangeEvent<Element>,\n    selection: string | SelectOptionObject\n  ) => {\n    event?.preventDefault();\n    setSelectedRegistry(selection);\n    setIsOpen(false);\n  };\n\n  const onClearSchema = () => {\n    setSelectedRegistry(undefined);\n  };\n\n  if (registryItems === undefined) {\n    return <Loading />;\n  }\n\n  if (!registryItems?.length) {\n    return <EmptyState topicName={topicName} basename={basename} />;\n  } else {\n    return (\n      <Stack hasGutter>\n        <StackItem>\n          <Card>\n            <CardTitle component='h2'>\n              {t('service_registry_instance')}\n            </CardTitle>\n            <CardBody>\n              <Grid hasGutter rowSpan={2}>\n                <GridItem>\n                  {' '}\n                  <Select\n                    id='registry-mapping-select'\n                    variant={SelectVariant.typeahead}\n                    typeAheadAriaLabel={t('select_instance')}\n                    placeholderText={t('select_instance')}\n                    onToggle={onToggle}\n                    onSelect={onSelectInstance}\n                    selections={selectedRegistry}\n                    isOpen={isOpen}\n                    width={600}\n                    onClear={onClearSchema}\n                  >\n                    {registryItems?.map((r: Registry) => {\n                      return <SelectOption key={r.id} value={r.name} />;\n                    })}\n                  </Select>\n                </GridItem>\n                <GridItem>\n                  <Link to={basename}>\n                    {t('create_service_registry_helper_text')}\n                  </Link>\n                </GridItem>\n              </Grid>\n            </CardBody>\n          </Card>\n        </StackItem>\n        <StackItem>\n          <Schemas renderSchema={renderSchema} registry={registry} />\n        </StackItem>\n      </Stack>\n    );\n  }\n};\n","import { FunctionComponent } from 'react';\nimport {\n  ServiceRegistryMapping,\n  ServiceRegistryMappingProps,\n} from './ServiceRegistryMapping';\n\nconst ServiceRegistryMappingFederated: FunctionComponent<\n  ServiceRegistryMappingProps\n> = ({ renderSchema, basename, topicName }) => {\n  return (\n    <ServiceRegistryMapping\n      renderSchema={renderSchema}\n      basename={basename}\n      topicName={topicName}\n    />\n  );\n};\n\nexport default ServiceRegistryMappingFederated;\n","import {\n  FunctionComponent,\n  MutableRefObject,\n  Suspense,\n  ReactNode,\n  useRef,\n  useState,\n  createContext,\n} from 'react';\nimport { ModalProps, Modal } from '@patternfly/react-core';\nimport { Loading } from '@rhoas/app-services-ui-components';\nimport {\n  ModalType,\n  ModalContextProps,\n  ActiveModalProps,\n  ModalRegistry,\n  ModalRegistryEntry,\n} from './types';\n\ntype ModalWrapperProps<T extends ModalType> = {\n  activeModal?: ActiveModalProps<T>;\n  hideModal: () => void;\n  modalRegistry: MutableRefObject<ModalRegistry>;\n};\n\ntype FallbackModalProps<T extends ModalType> = Pick<ModalProps, 'variant'> &\n  Pick<ModalWrapperProps<T>, 'hideModal'> &\n  Pick<ModalProps, 'title'>;\n\nconst FallbackModal: FunctionComponent<FallbackModalProps<ModalType>> = ({\n  variant,\n  hideModal,\n  title,\n}) => {\n  return (\n    <Modal\n      id='fallback-modal'\n      variant={variant}\n      isOpen={true}\n      aria-label={'fallback modal'}\n      showClose={true}\n      aria-describedby='modal-message'\n      onClose={hideModal}\n      title={title}\n      children={\n        <Loading\n          bullseyeProps={{\n            className: 'pf-u-p-xl',\n          }}\n        />\n      }\n    />\n  );\n};\n\nconst ModalWrapper: FunctionComponent<ModalWrapperProps<ModalType>> = ({\n  activeModal,\n  hideModal,\n  modalRegistry,\n}) => {\n  if (activeModal === undefined) {\n    return <></>;\n  }\n\n  const entry = modalRegistry.current[\n    activeModal.modalType\n  ] as ModalRegistryEntry<ModalType>;\n\n  const ModalComponent = entry.lazyComponent;\n  return (\n    <Suspense\n      fallback={\n        <FallbackModal\n          hideModal={hideModal}\n          variant={entry.variant}\n          title={entry.title}\n        />\n      }\n    >\n      <ModalComponent\n        hideModal={hideModal}\n        title={entry.title}\n        variant={entry.variant}\n        {...activeModal.modalProps}\n      />\n    </Suspense>\n  );\n};\n\nexport const ModalContext = createContext<\n  ModalContextProps<ModalType> | undefined\n>(undefined);\n\nexport const ModalProvider: FunctionComponent<{ children: ReactNode }> = ({\n  children,\n}) => {\n  const [activeModal, setActiveModal] = useState<\n    ActiveModalProps<ModalType> | undefined\n  >();\n  const modalRegistry = useRef<ModalRegistry>({} as ModalRegistry);\n\n  const modalProps: ModalContextProps<ModalType> = {\n    registerModals: (modals) => {\n      modalRegistry.current = { ...modalRegistry, ...modals };\n    },\n\n    hideModal: () => {\n      setActiveModal(undefined);\n    },\n\n    showModal: (modalType, modalProps) => {\n      setActiveModal({\n        modalType,\n        modalProps,\n      });\n    },\n  };\n\n  return (\n    <>\n      <ModalWrapper\n        activeModal={activeModal}\n        hideModal={modalProps.hideModal}\n        modalRegistry={modalRegistry}\n      />\n      <ModalContext.Provider value={modalProps}>\n        {children}\n      </ModalContext.Provider>\n    </>\n  );\n};\n","import { Registry, RegistryStatusValue } from '@rhoas/registry-management-sdk';\n\nexport type CreateServiceRegistryProps = {\n  hasUserTrialInstance: boolean | undefined;\n  fetchServiceRegistries: () => Promise<void>;\n};\n\nexport type DeleteServiceRegistryProps = {\n  shouldRedirect?: boolean;\n  status: RegistryStatusValue | undefined;\n  registry: Registry | undefined;\n  fetchServiceRegistries?: () => Promise<void>;\n  renderDownloadArtifacts?: (\n    registry: Registry,\n    downloadLabel: string\n  ) => string;\n  confirmButtonProps: {\n    label: string;\n  };\n};\n\nexport enum ModalType {\n  CreateServiceRegistry = 'CreateServiceRegistry',\n  DeleteServiceRegistry = 'DeleteServiceRegistry',\n}\n\n// A map of modal types to their props\nexport interface ModalTypePropsMap {\n  [ModalType.CreateServiceRegistry]: CreateServiceRegistryProps;\n  [ModalType.DeleteServiceRegistry]: DeleteServiceRegistryProps;\n}\n\nexport type ModalContextProps<T extends ModalType> = {\n  registerModals: (modals: ModalRegistry) => void;\n  showModal: (modalType: ModalType, modalProps: ModalTypePropsMap[T]) => void;\n  hideModal: () => void;\n};\n\nexport type ActiveModalProps<T extends ModalType> = {\n  modalType: T;\n  modalProps: ModalTypePropsMap[T];\n};\n\n// Properties available to all Modal components\nexport type BaseModalProps = {\n  hideModal: () => void;\n  title?: string;\n  variant?: 'small' | 'medium' | 'large' | 'default';\n};\n\nexport type ModalRegistryEntry<T extends ModalType> = {\n  lazyComponent: React.LazyExoticComponent<\n    React.FunctionComponent<ModalTypePropsMap[T] & BaseModalProps>\n  >;\n} & Pick<BaseModalProps, 'variant' | 'title'>;\n\nexport type ModalRegistry = {\n  [T in ModalType]?: ModalRegistryEntry<T>;\n};\n","import { useContext } from 'react';\nimport { ModalType, ModalContextProps } from './types';\nimport { ModalContext } from './ModalContext';\n\nexport const useModal = <T extends ModalType>(): ModalContextProps<T> => {\n  const answer = useContext(ModalContext);\n  if (answer === undefined) {\n    throw new Error('not inside modal provider');\n  }\n  return answer;\n};\n","import { Component, ErrorInfo, ReactNode } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport { PageSection, Button } from '@patternfly/react-core';\nimport { MASEmptyState, MASEmptyStateVariant } from '@app/components';\nimport './MASErrorBoundary.css';\n\ntype Props = WithTranslation &\n  RouteComponentProps & {\n    children?: ReactNode;\n  };\n\ntype State = {\n  hasError?: boolean;\n};\n\nclass MASErrorBoundary extends Component<Props, State> {\n  state: State = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('error:', error, errorInfo);\n  }\n\n  onClickButton = () => {\n    const { history } = this.props;\n    this.setState({ hasError: false });\n    history && history.push('/');\n  };\n\n  render() {\n    const { t } = this.props;\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return (\n        <PageSection padding={{ default: 'noPadding' }} isFilled>\n          <MASEmptyState\n            emptyStateProps={{\n              variant: MASEmptyStateVariant.UnexpectedError,\n            }}\n            emptyStateIconProps={{\n              className: 'icon-color',\n            }}\n            titleProps={{\n              title: t('common:something_went_wrong'),\n            }}\n            emptyStateBodyProps={{\n              body: t('unexpected_error'),\n            }}\n          >\n            <Button onClick={this.onClickButton}>\n              {t('common:go_to_kafka_instances')}\n            </Button>\n          </MASEmptyState>\n        </PageSection>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nconst MASErrorBoundaryComponent = withRouter(\n  withTranslation()(MASErrorBoundary)\n);\nexport { MASErrorBoundaryComponent as MASErrorBoundary };\n","import { AxiosError } from 'axios';\n\nexport interface IApiErrorData {\n  code: string;\n  href: string;\n  id: number;\n  kind: string;\n  reason: string;\n}\n\nconst isServiceApiError = (\n  error: unknown\n): error is AxiosError<IApiErrorData> => {\n  return (error as AxiosError<IApiErrorData>).response?.data.code !== undefined;\n};\n\nenum ErrorCodes {\n  USER_ALREADY_HAVE_TRIAL_INSTANCE = 'SRS-MGMT-13',\n  INSUFFICIENT_QUOTA = 'SRS-MGMT-14',\n  INSUFFICIENT_STANDARD_QUOTA = 'SRS-MGMT-7',\n  FAILED_TO_CHECK_QUOTA = 'SRS-MGMT-11',\n}\n\nexport { isServiceApiError, ErrorCodes };\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","ApicurioRegistry","render","breadcrumbId","t","useTranslation","auth","useAuth","srs","apiBasePath","basePath","useConfig","tenantId","useParams","showModal","renderDownloadArtifacts","isExpandedDrawer","setIsExpandedDrawer","useState","registry","setRegistry","undefined","loading","setLoading","fetchRegistry","useCallback","accessToken","getToken","api","RegistriesApi","Configuration","getRegistry","then","res","data","catch","useEffect","PageSection","variant","PageSectionVariants","light","padding","default","isExpanded","isLoading","onClose","onConnectToRegistry","onDeleteRegistry","status","DeleteServiceRegistry","shouldRedirect","confirmButtonProps","label","serviceRegistryDetails","tokenEndPointUrl","artifactId","Provider","value","EmptyState","topicName","basename","className","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","EmptyStateSecondaryActions","ClipboardCopy","isReadOnly","hoverTip","clickTip","Link","to","Loading","css","Bullseye","Spinner","TextContent","Text","component","TextVariants","h1","Schemas","memo","renderSchema","displayName","ServiceRegistryMapping","registryItems","setRegistryItems","selectedRegistry","setSelectedRegistry","isOpen","setIsOpen","fetchRegistries","page","pageSize","items","response","getRegistries","total","n","Math","ceil","i","concat","filteredRegistry","filter","r","onToggle","onSelectInstance","event","selection","preventDefault","onClearSchema","length","Stack","hasGutter","StackItem","Card","CardTitle","CardBody","Grid","rowSpan","GridItem","Select","id","SelectVariant","typeahead","typeAheadAriaLabel","placeholderText","onSelect","selections","onClear","map","SelectOption","FallbackModal","hideModal","title","Modal","showClose","children","bullseyeProps","ModalWrapper","activeModal","modalRegistry","entry","current","modalType","ModalComponent","lazyComponent","Suspense","fallback","modalProps","ModalContext","createContext","ModalProvider","setActiveModal","useRef","registerModals","modals","ModalType","useModal","answer","useContext","Error","Component","state","hasError","onClickButton","history","this","props","setState","push","static","componentDidCatch","error","errorInfo","console","isFilled","MASEmptyState","emptyStateProps","UnexpectedError","emptyStateIconProps","titleProps","emptyStateBodyProps","body","Button","onClick","withRouter","withTranslation","isServiceApiError","code","ErrorCodes"],"sourceRoot":""}