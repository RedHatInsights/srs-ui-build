{"version":3,"sources":["webpack://srs-ui/./src/app/components/MASAlerts/MASAlertToastGroup.tsx","webpack://srs-ui/./src/app/components/MASAlerts/MASAlerts.tsx","webpack://srs-ui/./src/app/components/MASPageNotFound/MASPageNotFound.tsx","webpack://srs-ui/./src/app/components/MASErrorBoundary/MASErrorBoundary.tsx","webpack://srs-ui/./src/app/components/MASLoading/MASLoading.tsx","webpack://srs-ui/./src/app/components/RootModal/RootModal.tsx","webpack://srs-ui/./src/app/utils/useDocumentTitle.ts","webpack://srs-ui/./src/app/utils/utils.ts","webpack://srs-ui/./src/app/Routes.tsx","webpack://srs-ui/./src/app/ServiceRegistry/ServiceRegistryConnected.tsx","webpack://srs-ui/./src/app/images/Patternfly-Logo.svg","webpack://srs-ui/./src/app/AppLayout/AppLayout.tsx","webpack://srs-ui/./src/app/App.tsx","webpack://srs-ui/./src/bootstrap/bootstrap.tsx"],"names":["MASAlertToastGroup","alerts","onCloseAlert","AlertGroup","isToast","map","key","variant","title","body","dataTestId","Alert","isLiveRegion","AlertVariant","variantLabel","actionClose","AlertActionCloseButton","onClose","AlertProvider","children","useState","setAlerts","timers","setTimers","useEffect","timersKeys","timer","timeOuts","filter","alert","includes","timeOut","skipAutoClose","undefined","setTimeout","hideAlert","forEach","clearTimeout","el","AlertContext","value","addAlert","Date","getTime","MASPageNotFound","t","useTranslation","PageSection","padding","default","isFilled","emptyStateProps","titleProps","emptyStateBodyProps","history","Button","onClick","push","state","hasError","onClickButton","props","setState","getDerivedStateFromError","_","componentDidCatch","error","errorInfo","console","render","this","MASEmptyState","emptyStateIconProps","className","Component","MASErrorBoundaryComponent","withTranslation","MASLoading","bullseyeProps","spinnerProps","Bullseye","Spinner","createContext","showModal","hideModal","store","useDocumentTitle","originalTitle","document","routeFocusTimer","routes","component","ConfigContext","srs","apiBasePath","__BASE_PATH__","ServiceRegistry","exact","label","path","useA11yRouteChange","isAsync","lastNavigation","useLastLocation","window","mainContainer","getElementById","focus","RouteWithTitleUpdates","rest","routeProps","PageNotFound","flattenedRoutes","reduce","flattened","route","AppRoutes","LastLocationProvider","idx","AppLayout","isNavOpen","setIsNavOpen","isMobileView","setIsMobileView","isNavOpenMobile","setIsNavOpenMobile","Header","PageHeader","logo","src","alt","showNavToggle","onNavToggle","location","renderNavItem","index","NavItem","id","NavLink","to","activeClassName","Navigation","Nav","theme","NavList","group","groupIndex","NavExpandable","isActive","some","pathname","Sidebar","PageSidebar","nav","pageId","PageSkipToContent","SkipToContent","event","preventDefault","primaryContentContainer","href","Page","mainContainerId","header","sidebar","onPageResize","mobileView","skipToContent","I18nextProvider","i18n","fallback"],"mappings":"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","file":"133.8d29cef5.js","sourcesContent":["import React from 'react';\nimport { AlertGroup, Alert, AlertActionCloseButton, AlertVariant } from '@patternfly/react-core';\n\nexport type MASAlertType = {\n  key: number;\n  title: string;\n  variant: AlertVariant;\n  body?: string | React.ReactElement;\n  dataTestId?: string;\n  skipAutoClose?: boolean;\n};\n\ntype AlertToastGroupProps = {\n  alerts: MASAlertType[];\n  onCloseAlert: (key: number) => void;\n};\n\nexport const MASAlertToastGroup: React.FunctionComponent<AlertToastGroupProps> = ({ alerts, onCloseAlert }: AlertToastGroupProps) => {\n  return (\n    <AlertGroup isToast>\n      {alerts.map(({ key, variant, title, body, dataTestId }) => (\n        <Alert\n          key={key}\n          isLiveRegion\n          variant={AlertVariant[variant]}\n          variantLabel=\"\"\n          title={title}\n          actionClose={<AlertActionCloseButton title={title} onClose={() => onCloseAlert(key)} />}\n          data-testid={dataTestId}\n        >\n          {body}\n        </Alert>\n      ))}\n    </AlertGroup>\n  );\n}\n","import React, { useState, ReactNode, useEffect } from 'react';\nimport { MASAlertType, MASAlertToastGroup } from './MASAlertToastGroup';\nimport { AlertVariant } from '@patternfly/react-core';\nimport { AlertContext } from '@bf2/ui-shared';\n\ntype TimeOut = {\n  key: number;\n  timeOut: NodeJS.Timeout | undefined;\n};\n\nexport const AlertProvider: React.FunctionComponent = ({ children }) => {\n  const [alerts, setAlerts] = useState<MASAlertType[]>([]);\n  const [timers, setTimers] = useState<TimeOut[]>([]);\n\n  useEffect(() => {\n    const timersKeys = timers.map((timer) => timer.key);\n    const timeOuts = alerts\n      .filter((alert) => !timersKeys.includes(alert.key))\n      .map((alert) => {\n        const timeOut = alert?.skipAutoClose ? undefined : setTimeout(() => hideAlert(alert.key), 8000);\n        return { key: alert.key, timeOut };\n      });\n    setTimers([...timers, ...timeOuts]);\n    return () => timers.forEach((timer) => timer?.timeOut && clearTimeout(timer.timeOut));\n  }, [alerts]);\n\n  const createId = () => new Date().getTime();\n\n  const hideAlert = (key: number) => {\n    setAlerts((alerts) => [...alerts.filter((el) => el.key !== key)]);\n    setTimers((timers) => [...timers.filter((timer) => timer.key === key)]);\n  };\n\n  const addAlert = (\n    title: string,\n    variant: AlertVariant = AlertVariant.default,\n    body?: string | React.ReactElement,\n    dataTestId?: string,\n    skipAutoClose?: boolean\n  ) => {\n    setAlerts([...alerts, { key: createId(), title, variant, body, dataTestId, skipAutoClose }]);\n  };\n\n  return (\n    <AlertContext.Provider value={{ addAlert }}>\n      <MASAlertToastGroup alerts={alerts} onCloseAlert={hideAlert} />\n      {children}\n    </AlertContext.Provider>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PageSection, Button } from '@patternfly/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { MASEmptyState, MASEmptyStateVariant } from '@app/components';\n\nconst MASPageNotFound: React.FunctionComponent = () => {\n  const { t } = useTranslation();\n\n  function GoHomeBtn() {\n    const history = useHistory();\n    function handleClick() {\n      history.push('/');\n    }\n    return <Button onClick={handleClick}>{t('return_to_home_page')}</Button>;\n  }\n\n  return (\n    <PageSection padding={{ default: 'noPadding' }} isFilled>\n      <MASEmptyState\n        emptyStateProps={{ variant: MASEmptyStateVariant.PageNotFound }}\n        titleProps={{ title: t('404_page_does_not_exist') }}\n        emptyStateBodyProps={{\n          body: t('we_cannot_find_the_page_you_are_looking_for'),\n        }}\n      >\n        <GoHomeBtn />\n      </MASEmptyState>\n    </PageSection>\n  );\n};\n\nexport { MASPageNotFound };\n","import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport { PageSection, Button } from '@patternfly/react-core';\nimport { MASEmptyState, MASEmptyStateVariant } from '@app/components';\nimport './MASErrorBoundary.css';\n\ntype Props = WithTranslation &\n  RouteComponentProps & {\n    children?: ReactNode;\n  };\n\ntype State = {\n  hasError?: boolean;\n};\n\nclass MASErrorBoundary extends Component<Props, State> {\n  state: State = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(_: Error): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('error:', error, errorInfo);\n  }\n\n  onClickButton = () => {\n    const { history } = this.props;\n    this.setState({ hasError: false });\n    history && history.push('/');\n  };\n\n  render() {\n    const { t } = this.props;\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return (\n        <PageSection padding={{ default: 'noPadding' }} isFilled>\n          <MASEmptyState\n            emptyStateProps={{\n              variant: MASEmptyStateVariant.UnexpectedError,\n            }}\n            emptyStateIconProps={{\n              className: 'icon-color',\n            }}\n            titleProps={{\n              title: t('common.something_went_wrong'),\n            }}\n            emptyStateBodyProps={{\n              body: t('unexpected_error'),\n            }}\n          >\n            <Button onClick={this.onClickButton}>{t('common.go_to_kafka_instances')}</Button>\n          </MASEmptyState>\n        </PageSection>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nconst MASErrorBoundaryComponent = withRouter(withTranslation()(MASErrorBoundary));\nexport { MASErrorBoundaryComponent as MASErrorBoundary };\n","import React from 'react';\nimport { Bullseye, BullseyeProps, Spinner, SpinnerProps } from '@patternfly/react-core';\n\nexport type MASLoadingProps = {\n  bullseyeProps?: Omit<BullseyeProps, 'children'>;\n  spinnerProps?: SpinnerProps;\n};\n\nexport const MASLoading: React.FunctionComponent<MASLoadingProps> = ({\n  bullseyeProps,\n  spinnerProps,\n}: MASLoadingProps) => (\n  <Bullseye {...bullseyeProps}>\n    <Spinner {...spinnerProps} />\n  </Bullseye>\n);\n","import React, { useState, createContext, useContext } from 'react';\n\nexport const MODAL_TYPES = {\n  CREATE_KAFKA_INSTANCE: 'CREATE_KAFKA_INSTANCE',\n  DELETE_KAFKA_INSTANCE: 'DELETE_KAFKA_INSTANCE',\n  CREATE_SERVICE_ACCOUNT: 'CREATE_SERVICE_ACCOUNT',\n  DELETE_SERVICE_ACCOUNT: 'DELETE_SERVICE_ACCOUNT',\n  RESET_CREDENTIALS: 'RESET_CREDENTIALS',\n  GENERATE_CREDENTIALS: 'GENERATE_CREDENTIALS',\n  DELETE_KAFKA_EXTERNALLY: 'DELETE_KAFKA_EXTERNALLY',\n};\n\nconst MODAL_COMPONENTS: any = {\n  [MODAL_TYPES.CREATE_KAFKA_INSTANCE]: \"\",\n};\n\ntype RootModalContext = {\n  showModal: (modalType: string, modalProps?: any) => void;\n  hideModal: () => void;\n  store: any;\n};\n\nconst initalState: RootModalContext = {\n  showModal: () => {},\n  hideModal: () => {},\n  store: {},\n};\n\nconst RootModalContext = createContext(initalState);\nexport const useRootModalContext = (): RootModalContext => useContext(RootModalContext);\n\nexport const RootModal = ({ children }) => {\n  const [store, setStore] = useState();\n  const { modalType, modalProps } = store || {};\n\n  const showModal = (modalType: string, modalProps: any = {}) => {\n    setStore({\n      ...store,\n      modalType,\n      modalProps,\n    });\n  };\n\n  const hideModal = () => {\n    setStore({\n      ...store,\n      modalType: null,\n      modalProps: {},\n    });\n  };\n\n  const renderComponent = () => {\n    const ModalComponent = MODAL_COMPONENTS[modalType];\n    if (!modalType || !ModalComponent) {\n      return null;\n    }\n    return <ModalComponent id=\"global-modal\" {...modalProps} />;\n  };\n\n  return (\n    <RootModalContext.Provider value={{ store, showModal, hideModal }}>\n      {renderComponent()}\n      {children}\n    </RootModalContext.Provider>\n  );\n};\n","import * as React from 'react';\n\n// a custom hook for setting the page title\nexport function useDocumentTitle(title: string) {\n  React.useEffect(() => {\n    const originalTitle = document.title;\n    document.title = title;\n\n    return () => {\n      document.title = originalTitle;\n    };\n  }, [title]);\n}\n","function accessibleRouteChangeHandler() {\n  return window.setTimeout(() => {\n    const mainContainer = document.getElementById('primary-app-container');\n    if (mainContainer) {\n      mainContainer.focus();\n    }\n  }, 50);\n}\n\n\nconst getModalAppendTo = (): HTMLElement | undefined => document.querySelector('#qs-content') as HTMLElement || document.body;\n\nexport {\n  accessibleRouteChangeHandler,\n  getModalAppendTo\n};","import React from 'react';\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom';\nimport { accessibleRouteChangeHandler } from '@app/utils/utils';\nimport { MASPageNotFound } from '@app/components/MASPageNotFound';\nimport { useDocumentTitle } from '@app/utils/useDocumentTitle';\nimport { LastLocationProvider, useLastLocation } from 'react-router-last-location';\nimport { ServiceRegistryConnected } from './ServiceRegistry/ServiceRegistryConnected';\n\nlet routeFocusTimer: number;\nexport interface IAppRoute {\n  label?: string; // Excluding the label will exclude the route from the nav sidebar in AppLayout\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n  exact?: boolean;\n  path: string;\n  title: string;\n  isAsync?: boolean;\n  routes?: undefined;\n  federatedComponent?: string;\n}\n\nexport interface IAppRouteGroup {\n  label: string;\n  routes: IAppRoute[];\n}\n\nexport type AppRouteConfig = IAppRoute | IAppRouteGroup;\n\nconst routes: AppRouteConfig[] = [\n  {\n    component: ServiceRegistryConnected,\n    exact: true,\n    label: 'Service Registry',\n    path: '/',\n    title: 'Service Registry',\n  },\n];\n\n// a custom hook for sending focus to the primary content container\n// after a view has loaded so that subsequent press of tab key\n// sends focus directly to relevant content\nconst useA11yRouteChange = (isAsync: boolean) => {\n  const lastNavigation = useLastLocation();\n  React.useEffect(() => {\n    if (!isAsync && lastNavigation !== null) {\n      routeFocusTimer = accessibleRouteChangeHandler();\n    }\n    return () => {\n      window.clearTimeout(routeFocusTimer);\n    };\n  }, [isAsync, lastNavigation]);\n};\n\nconst RouteWithTitleUpdates = ({ component: Component, isAsync = false, title, ...rest }: IAppRoute) => {\n  useA11yRouteChange(isAsync);\n  useDocumentTitle(title);\n\n  function routeWithTitle(routeProps: RouteComponentProps) {\n    return <Component {...rest} {...routeProps} />;\n  }\n\n  return <Route render={routeWithTitle} {...rest} />;\n};\n\nconst PageNotFound = ({ title }: { title: string }) => {\n  useDocumentTitle(title);\n  return <Route component={MASPageNotFound} />;\n};\n\nconst flattenedRoutes: IAppRoute[] = routes.reduce(\n  (flattened, route) => [...flattened, ...(route.routes ? route.routes : [route])],\n  [] as IAppRoute[]\n);\n\nconst AppRoutes = (): React.ReactElement => (\n  <LastLocationProvider>\n    <Switch>\n      {flattenedRoutes.map(({ path, exact, component, title, isAsync, ...rest }, idx) => (\n        <RouteWithTitleUpdates\n          path={path}\n          exact={exact}\n          component={component}\n          key={idx}\n          title={title}\n          isAsync={isAsync}\n          {...rest}\n        />\n      ))}\n      <PageNotFound title=\"404 Page Not Found\" />\n    </Switch>\n  </LastLocationProvider>\n);\n\nexport { AppRoutes, routes };\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ServiceRegistry } from './ServiceRegistry';\nimport { ServiceRegistryParams } from './components';\nimport { AlertProvider } from '@app/components/MASAlerts';\nimport { Config, ConfigContext } from '@bf2/ui-shared';\n\ndeclare const __BASE_PATH__: string;\n\ntype ServiceRegistryConnectedProps = {\n  federatedComponent?: string;\n};\n\nexport const ServiceRegistryConnected: React.FC<ServiceRegistryConnectedProps> = ({ federatedComponent }) => {\n  const params = useParams<ServiceRegistryParams>();\n\n  return (\n    <ConfigContext.Provider\n      value={\n        {\n          srs: {\n            apiBasePath: __BASE_PATH__,\n          },\n        } as Config\n      }\n    >\n      <AlertProvider>\n        <ServiceRegistry />\n      </AlertProvider>\n    </ConfigContext.Provider>\n  );\n};\n","export default __webpack_public_path__ + \"f940137c.svg\";","import * as React from 'react';\nimport { NavLink, useLocation, useHistory } from 'react-router-dom';\nimport {\n  Nav,\n  NavList,\n  NavItem,\n  NavExpandable,\n  Page,\n  PageHeader,\n  PageSidebar,\n  SkipToContent,\n} from '@patternfly/react-core';\nimport { routes, IAppRoute, IAppRouteGroup } from '@app/Routes';\nimport logo from '@app/images/Patternfly-Logo.svg';\n\ntype AppLayoutProps = {\n  children: React.ReactNode;\n};\n\nconst AppLayout: React.FunctionComponent<AppLayoutProps> = ({ children }) => {\n  const [isNavOpen, setIsNavOpen] = React.useState(true);\n  const [isMobileView, setIsMobileView] = React.useState(true);\n  const [isNavOpenMobile, setIsNavOpenMobile] = React.useState(false);\n  const onNavToggleMobile = () => {\n    setIsNavOpenMobile(!isNavOpenMobile);\n  };\n  const onNavToggle = () => {\n    setIsNavOpen(!isNavOpen);\n  };\n  const onPageResize = (props: { mobileView: boolean; windowSize: number }) => {\n    setIsMobileView(props.mobileView);\n  };\n\n  function LogoImg() {\n    const history = useHistory();\n    function handleClick() {\n      history.push('/');\n    }\n    return <img src={logo} onClick={handleClick} alt=\"PatternFly Logo\" />;\n  }\n\n  const Header = (\n    <PageHeader\n      logo={<LogoImg />}\n      showNavToggle\n      isNavOpen={isNavOpen}\n      onNavToggle={isMobileView ? onNavToggleMobile : onNavToggle}\n    />\n  );\n\n  const location = useLocation();\n\n  const renderNavItem = (route: IAppRoute, index: number) => (\n    <NavItem key={`${route.label}-${index}`} id={`${route.label}-${index}`}>\n      <NavLink exact={route.exact} to={route.path} activeClassName=\"pf-m-current\">\n        {route.label}\n      </NavLink>\n    </NavItem>\n  );\n\n  const renderNavGroup = (group: IAppRouteGroup, groupIndex: number) => (\n    <NavExpandable\n      key={`${group.label}-${groupIndex}`}\n      id={`${group.label}-${groupIndex}`}\n      title={group.label}\n      isActive={group.routes.some((route) => route.path === location.pathname)}\n    >\n      {group.routes.map((route, idx) => route.label && renderNavItem(route, idx))}\n    </NavExpandable>\n  );\n\n  const Navigation = (\n    <Nav id=\"nav-primary-simple\" theme=\"dark\">\n      <NavList id=\"nav-list-simple\">\n        {routes.map(\n          (route, idx) => route.label && (!route.routes ? renderNavItem(route, idx) : renderNavGroup(route, idx))\n        )}\n      </NavList>\n    </Nav>\n  );\n\n  const Sidebar = <PageSidebar theme=\"dark\" nav={Navigation} isNavOpen={isMobileView ? isNavOpenMobile : isNavOpen} />;\n\n  const pageId = 'primary-app-container';\n\n  const PageSkipToContent = (\n    <SkipToContent\n      onClick={(event) => {\n        event.preventDefault();\n        const primaryContentContainer = document.getElementById(pageId);\n        primaryContentContainer && primaryContentContainer.focus();\n      }}\n      href={`#${pageId}`}\n    >\n      Skip to Content\n    </SkipToContent>\n  );\n  return (\n    <Page\n      mainContainerId={pageId}\n      header={Header}\n      sidebar={Sidebar}\n      onPageResize={onPageResize}\n      skipToContent={PageSkipToContent}\n    >\n      {children}\n    </Page>\n  );\n};\n\nexport { AppLayout };\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { I18nextProvider } from 'react-i18next';\nimport '@patternfly/react-core/dist/styles/base.css';\nimport { AppLayout } from '@app/AppLayout/AppLayout';\nimport { AppRoutes } from '@app/Routes';\nimport { MASErrorBoundary, MASLoading } from '@app/components';\nimport srsi18n from '@i18n/i18n';\nimport '@app/App.css';\n\nconst App: React.FunctionComponent = () => (\n  <I18nextProvider i18n={srsi18n}>\n    <Router>\n      <React.Suspense fallback={<MASLoading />}>\n        <MASErrorBoundary>\n          <AppLayout>\n            <AppRoutes />\n          </AppLayout>\n        </MASErrorBoundary>\n      </React.Suspense>\n    </Router>\n  </I18nextProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from '@app/App';\n\nif (process.env.NODE_ENV !== 'production') {\n  const config = {\n    rules: [\n      {\n        id: 'color-contrast',\n        enabled: false,\n      },\n    ],\n  };\n  // eslint-disable-next-line @typescript-eslint/no-var-requires, no-undef\n  const axe = require('react-axe');\n  axe(React, ReactDOM, 1000, config);\n}\n\nReactDOM.render(<App />, document.getElementById('root') as HTMLElement);\n"],"sourceRoot":""}