{"version":3,"file":"712.48163d08.js","mappings":"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","sources":["webpack://srs-ui/./src/app/components/MASPageNotFound/MASPageNotFound.tsx","webpack://srs-ui/./src/app/components/MASAlerts/MASAlerts.tsx","webpack://srs-ui/./src/app/components/MASAlerts/MASAlertToastGroup.tsx","webpack://srs-ui/./src/app/components/MASErrorBoundary/MASErrorBoundary.tsx","webpack://srs-ui/./src/app/utils/useDocumentTitle.ts","webpack://srs-ui/./src/app/utils/utils.ts","webpack://srs-ui/./src/app/constants/constants.ts","webpack://srs-ui/./src/app/Routes.tsx","webpack://srs-ui/./src/app/ServiceRegistry/ServiceRegistry.tsx","webpack://srs-ui/./src/app/hooks/useTimeOut.ts","webpack://srs-ui/./src/app/ServiceRegistry/ServiceRegistryConnected.tsx","webpack://srs-ui/./src/app/images/Patternfly-Logo.svg","webpack://srs-ui/./src/app/AppLayout/AppLayout.tsx","webpack://srs-ui/./src/app/auth/keycloak/keycloakAuth.ts","webpack://srs-ui/./src/app/App.tsx","webpack://srs-ui/./src/app/auth/keycloak/KeycloakContext.tsx","webpack://srs-ui/./src/bootstrap/bootstrap.tsx"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PageSection, Button } from '@patternfly/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { MASEmptyState, MASEmptyStateVariant } from '@app/components';\n\nconst MASPageNotFound: React.FunctionComponent = () => {\n  const { t } = useTranslation();\n\n  function GoHomeBtn() {\n    const history = useHistory();\n    function handleClick() {\n      history.push('/');\n    }\n    return <Button onClick={handleClick}>{t('return_to_home_page')}</Button>;\n  }\n\n  return (\n    <PageSection padding={{ default: 'noPadding' }} isFilled>\n      <MASEmptyState\n        emptyStateProps={{ variant: MASEmptyStateVariant.PageNotFound }}\n        titleProps={{ title: t('404_page_does_not_exist') }}\n        emptyStateBodyProps={{\n          body: t('we_cannot_find_the_page_you_are_looking_for'),\n        }}\n      >\n        <GoHomeBtn />\n      </MASEmptyState>\n    </PageSection>\n  );\n};\n\nexport { MASPageNotFound };\n","import React, { useEffect, useState } from 'react';\nimport { MASAlertToastGroup } from '@app/components';\nimport { AlertContext, AlertProps } from '@bf2/ui-shared';\n\ntype TimeOut = {\n  key: string | undefined;\n  timeOut: ReturnType<typeof setTimeout> | undefined;\n};\n\nexport const AlertProvider: React.FunctionComponent = ({ children }) => {\n  const [alerts, setAlerts] = useState<AlertProps[]>([]);\n  const [timers, setTimers] = useState<TimeOut[]>([]);\n\n  useEffect(() => {\n    const timersKeys = timers.map((timer) => timer.key);\n    const timeOuts = alerts\n      .filter((alert) => !timersKeys.includes(alert?.id))\n      .map((alert) => {\n        const { id = '' } = alert;\n        const timeOut: ReturnType<typeof setTimeout> = setTimeout(() => hideAlert(id), 8000);\n        return { key: alert.id, timeOut } as TimeOut;\n      });\n    setTimers([...timers, ...timeOuts]);\n    return () => timers.forEach((timer) => timer?.timeOut && clearTimeout(timer.timeOut));\n  }, [alerts]);\n\n  const createId = () => new Date().getTime();\n\n  const hideAlert = (key: string | undefined) => {\n    setAlerts((alerts) => [...alerts.filter((el) => el.id !== key)]);\n    setTimers((timers) => [...timers.filter((timer) => timer.key === key)]);\n  };\n\n  const addAlert = (props: AlertProps) => {\n    const id = createId().toString();\n    setAlerts([...alerts, { ...props, id }]);\n  };\n\n  return (\n    <AlertContext.Provider value={{ addAlert }}>\n      <MASAlertToastGroup alerts={alerts} onCloseAlert={hideAlert} />\n      {children}\n    </AlertContext.Provider>\n  );\n};\n","import React from 'react';\nimport { AlertProps } from '@bf2/ui-shared';\nimport { AlertGroup, Alert, AlertActionCloseButton, AlertVariant } from '@patternfly/react-core';\n\ntype AlertToastGroupProps = {\n  alerts: AlertProps[];\n  onCloseAlert: (key: string | undefined) => void;\n};\n\nexport const MASAlertToastGroup: React.FunctionComponent<AlertToastGroupProps> = ({\n  alerts,\n  onCloseAlert,\n}: AlertToastGroupProps) => {\n  return (\n    <AlertGroup isToast>\n      {alerts.map(({ id, variant, title, description, dataTestId, ...rest }) => (\n        <Alert\n          key={id}\n          isLiveRegion\n          variant={AlertVariant[variant]}\n          variantLabel=\"\"\n          title={title}\n          actionClose={<AlertActionCloseButton title={title} onClose={() => onCloseAlert(id)} />}\n          data-testid={dataTestId}\n          {...rest}\n        >\n          {description}\n        </Alert>\n      ))}\n    </AlertGroup>\n  );\n};\n","import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport { PageSection, Button } from '@patternfly/react-core';\nimport { MASEmptyState, MASEmptyStateVariant } from '@app/components';\nimport './MASErrorBoundary.css';\n\ntype Props = WithTranslation &\n  RouteComponentProps & {\n    children?: ReactNode;\n  };\n\ntype State = {\n  hasError?: boolean;\n};\n\nclass MASErrorBoundary extends Component<Props, State> {\n  state: State = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(_: Error): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('error:', error, errorInfo);\n  }\n\n  onClickButton = () => {\n    const { history } = this.props;\n    this.setState({ hasError: false });\n    history && history.push('/');\n  };\n\n  render() {\n    const { t } = this.props;\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return (\n        <PageSection padding={{ default: 'noPadding' }} isFilled>\n          <MASEmptyState\n            emptyStateProps={{\n              variant: MASEmptyStateVariant.UnexpectedError,\n            }}\n            emptyStateIconProps={{\n              className: 'icon-color',\n            }}\n            titleProps={{\n              title: t('common.something_went_wrong'),\n            }}\n            emptyStateBodyProps={{\n              body: t('unexpected_error'),\n            }}\n          >\n            <Button onClick={this.onClickButton}>{t('common.go_to_kafka_instances')}</Button>\n          </MASEmptyState>\n        </PageSection>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nconst MASErrorBoundaryComponent = withRouter(withTranslation()(MASErrorBoundary));\nexport { MASErrorBoundaryComponent as MASErrorBoundary };\n","import * as React from 'react';\n\n// a custom hook for setting the page title\nexport function useDocumentTitle(title: string) {\n  React.useEffect(() => {\n    const originalTitle = document.title;\n    document.title = title;\n\n    return () => {\n      document.title = originalTitle;\n    };\n  }, [title]);\n}\n","import { formatDistance } from 'date-fns';\n\nfunction accessibleRouteChangeHandler() {\n  return window.setTimeout(() => {\n    const mainContainer = document.getElementById('primary-app-container');\n    if (mainContainer) {\n      mainContainer.focus();\n    }\n  }, 50);\n}\n\n\nconst getModalAppendTo = (): HTMLElement | undefined => document.querySelector('#qs-content') as HTMLElement || document.body;\n\nconst MAX_SERVICE_REGISTRY_NAME_LENGTH = 32;\nconst MAX_SERVICE_REGISTRY_DESC_LENGTH = 255;\n\nconst statusOptions = [\n  { value: 'ready', label: 'Ready' },\n  { value: 'failed', label: 'Failed' },\n  { value: 'accepted', label: 'Creation pending' },\n  { value: 'provisioning', label: 'Creation in progress' },\n  { value: 'preparing', label: 'Creation in progress' },\n  { value: 'deprovision', label: 'Deletion in progress' },\n  { value: 'deleting', label: 'Deletion in progress' },\n];\n\nconst getFormattedDate = (date: string | Date, translatePostfix: string): string => {\n  date = typeof date === 'string' ? new Date(date) : date;\n  return formatDistance(date, new Date()) + ' ' + translatePostfix;\n};\n\nexport {\n  accessibleRouteChangeHandler,\n  getModalAppendTo,\n  MAX_SERVICE_REGISTRY_NAME_LENGTH,\n  MAX_SERVICE_REGISTRY_DESC_LENGTH,\n  statusOptions,\n  getFormattedDate\n};","const MAX_POLL_INTERVAL = 5000;\n\nexport { MAX_POLL_INTERVAL };","import React from 'react';\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom';\nimport { accessibleRouteChangeHandler } from '@app/utils/utils';\nimport { MASPageNotFound } from '@app/components/MASPageNotFound';\nimport { useDocumentTitle } from '@app/utils/useDocumentTitle';\nimport { LastLocationProvider, useLastLocation } from 'react-router-last-location';\nimport { ServiceRegistryConnected } from './ServiceRegistry/ServiceRegistryConnected';\n\nlet routeFocusTimer: number;\nexport interface IAppRoute {\n  label?: string; // Excluding the label will exclude the route from the nav sidebar in AppLayout\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n  exact?: boolean;\n  path: string;\n  title: string;\n  isAsync?: boolean;\n  routes?: undefined;\n  federatedComponent?: string;\n}\n\nexport interface IAppRouteGroup {\n  label: string;\n  routes: IAppRoute[];\n}\n\nexport type AppRouteConfig = IAppRoute | IAppRouteGroup;\n\nconst routes: AppRouteConfig[] = [\n  {\n    component: ServiceRegistryConnected,\n    exact: true,\n    label: 'Service Registry',\n    path: '/',\n    title: 'Service Registry',\n  },\n];\n\n// a custom hook for sending focus to the primary content container\n// after a view has loaded so that subsequent press of tab key\n// sends focus directly to relevant content\nconst useA11yRouteChange = (isAsync: boolean) => {\n  const lastNavigation = useLastLocation();\n  React.useEffect(() => {\n    if (!isAsync && lastNavigation !== null) {\n      routeFocusTimer = accessibleRouteChangeHandler();\n    }\n    return () => {\n      window.clearTimeout(routeFocusTimer);\n    };\n  }, [isAsync, lastNavigation]);\n};\n\nconst RouteWithTitleUpdates = ({ component: Component, isAsync = false, title, ...rest }: IAppRoute) => {\n  useA11yRouteChange(isAsync);\n  useDocumentTitle(title);\n\n  function routeWithTitle(routeProps: RouteComponentProps) {\n    return <Component {...rest} {...routeProps} />;\n  }\n\n  return <Route render={routeWithTitle} {...rest} />;\n};\n\nconst PageNotFound = ({ title }: { title: string }) => {\n  useDocumentTitle(title);\n  return <Route component={MASPageNotFound} />;\n};\n\nconst flattenedRoutes: IAppRoute[] = routes.reduce(\n  (flattened, route) => [...flattened, ...(route.routes ? route.routes : [route])],\n  [] as IAppRoute[]\n);\n\nconst AppRoutes = (): React.ReactElement => (\n  <LastLocationProvider>\n    <Switch>\n      {flattenedRoutes.map(({ path, exact, component, title, isAsync, ...rest }, idx) => (\n        <RouteWithTitleUpdates\n          path={path}\n          exact={exact}\n          component={component}\n          key={idx}\n          title={title}\n          isAsync={isAsync}\n          {...rest}\n        />\n      ))}\n      <PageNotFound title=\"404 Page Not Found\" />\n    </Switch>\n  </LastLocationProvider>\n);\n\nexport { AppRoutes, routes };\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { PageSection, PageSectionVariants } from '@patternfly/react-core';\nimport { Configuration, RegistryListRest, RegistryRest, RegistriesApi } from '@rhoas/registry-management-sdk';\nimport { useAuth, useConfig } from '@bf2/ui-shared';\nimport {\n  ServiceRegistryDrawer,\n  UnauthrizedUser,\n  ServiceRegistryEmptyState,\n  ServiceRegistryTableView,\n} from './components';\nimport { ServiceRegistryHeader } from '@app/ServiceRegistry/components';\nimport { MASLoading, useRootModalContext, MODAL_TYPES } from '@app/components';\nimport { useTimeout } from '@app/hooks';\nimport { MAX_POLL_INTERVAL } from '@app/constants';\nimport './ServiceRegistry.css';\n\nexport const ServiceRegistry: React.FC = () => {\n  const { t } = useTranslation();\n  const auth = useAuth();\n  const {\n    srs: { apiBasePath: basePath },\n  } = useConfig();\n  const { showModal } = useRootModalContext();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const page = parseInt(searchParams.get('page') || '', 10) || 1;\n  const perPage = parseInt(searchParams.get('perPage') || '', 10) || 10;\n\n  const [isExpandedDrawer, setIsExpandedDrawer] = useState<boolean>(false);\n  const [selectedRegistryInstance, setSelectedRegistryInstance] = useState<RegistryRest | undefined>(undefined);\n  const [notRequiredDrawerContentBackground, setNotRequiredDrawerContentBackground] = useState<boolean>(false);\n  const [isUnauthorizedUser, setIsUnauthorizedUser] = useState<boolean>(false);\n  const [registries, setRegistries] = useState<RegistryListRest | undefined>(undefined);\n  const [registryItems, setRegistryItems] = useState<RegistryRest[] | undefined>(undefined);\n  const [loggedInUser, setLoggedInUser] = useState<string | undefined>(undefined);\n  const [orderBy, setOrderBy] = useState<string>('name asc');\n\n  useEffect(() => {\n    fetchRegistries();\n  }, []);\n\n  useEffect(() => {\n    auth?.getUsername().then((username) => setLoggedInUser(username));\n  }, [auth]);\n\n  useEffect(() => {\n    updateServiceRegistryInstance();\n  }, [registryItems]);\n\n  const updateServiceRegistryInstance = () => {\n    if (registryItems && registryItems?.length > 0) {\n      const selectedRegistryItem = registryItems?.filter(\n        (registry) => registry?.id === selectedRegistryInstance?.id\n      )[0];\n      const newState: any = { ...selectedRegistryInstance, ...selectedRegistryItem };\n      selectedRegistryItem && setSelectedRegistryInstance(newState);\n    }\n  };\n\n  const fetchRegistries = async () => {\n    const accessToken = await auth?.srs.getToken();\n    const api = new RegistriesApi(\n      new Configuration({\n        accessToken,\n        basePath,\n      })\n    );\n    await api\n      .getRegistries()\n      .then((res) => {\n        const registry = res?.data;\n        setRegistries(registry);\n        setRegistryItems(registry?.items);\n      })\n      .catch((error) => {\n        //todo: handle error\n      });\n  };\n\n  useTimeout(() => fetchRegistries(), MAX_POLL_INTERVAL);\n\n  const onConnectToRegistry = (instance: RegistryRest | undefined) => {\n    setIsExpandedDrawer(true);\n    setSelectedRegistryInstance(instance);\n  };\n\n  const onCloseDrawer = () => {\n    setIsExpandedDrawer(false);\n  };\n\n  const onDeleteRegistry = (registry: RegistryRest | undefined) => {\n    const { name, status } = registry || {};\n    showModal(MODAL_TYPES.DELETE_SERVICE_REGISTRY, {\n      serviceRegistryStatus: status,\n      selectedItemData: registry,\n      fetchRegistries,\n      title: `${t('common.delete_service_registry_title')}?`,\n      confirmButtonProps: {\n        label: t('common.delete'),\n      },\n      textProps: {\n        description: t('common.delete_service_registry_description', { name }),\n      },\n    });\n  };\n\n  const getAccessToServiceRegistry = () => {\n    /**\n     * Todo: integrate get access service registry api\n     */\n  };\n\n  const createServiceRegistry = () => {\n    showModal(MODAL_TYPES.CREATE_SERVICE_REGISTRY, {\n      fetchServiceRegistries: fetchRegistries,\n    });\n  };\n\n  if (isUnauthorizedUser) {\n    return <UnauthrizedUser getAccessToServiceRegistry={getAccessToServiceRegistry} />;\n  }\n\n  if (registryItems === undefined) {\n    return (\n      <PageSection variant={PageSectionVariants.light} padding={{ default: 'noPadding' }}>\n        <MASLoading />\n      </PageSection>\n    );\n  } else {\n    if (!registryItems?.length) {\n      return (\n        <>\n          <ServiceRegistryHeader />\n          <ServiceRegistryEmptyState onCreateserviceRegistry={createServiceRegistry} />\n        </>\n      );\n    } else {\n      return (\n        <ServiceRegistryDrawer\n          isExpanded={isExpandedDrawer}\n          isLoading={selectedRegistryInstance === undefined}\n          notRequiredDrawerContentBackground={notRequiredDrawerContentBackground}\n          onClose={onCloseDrawer}\n          registry={selectedRegistryInstance}\n        >\n          <main className=\"pf-c-page__main\">\n            <ServiceRegistryHeader\n              onConnectToRegistry={onConnectToRegistry}\n              onDeleteRegistry={onDeleteRegistry}\n              serviceRegistryDetails={selectedRegistryInstance}\n            />\n            <ServiceRegistryTableView\n              page={page}\n              perPage={perPage}\n              serviceRegistryItems={registryItems}\n              total={registries?.total}\n              onViewConnection={onConnectToRegistry}\n              onDelete={onDeleteRegistry}\n              expectedTotal={0}\n              orderBy={orderBy}\n              setOrderBy={setOrderBy}\n              loggedInUser={loggedInUser}\n              currentUserRegistries={registryItems}\n              handleCreateModal={createServiceRegistry}\n              refresh={fetchRegistries}\n              registryDataLoaded={false}\n              isDrawerOpen={isExpandedDrawer}\n            />\n          </main>\n        </ServiceRegistryDrawer>\n      );\n    }\n  }\n};\n","import { useEffect, useRef } from 'react';\n\nexport function useTimeout<T>(callback: T, delay: number): void {\n  const savedCallback = useRef<any>();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setTimeout(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n    return;\n  }, [callback, delay]);\n}\n","import React from 'react';\nimport { ServiceRegistry } from './ServiceRegistry';\n\nexport const ServiceRegistryConnected: React.FC = () => {\n  return <ServiceRegistry />;\n};\n","export default __webpack_public_path__ + \"f940137c.svg\";","import * as React from 'react';\nimport { NavLink, useLocation, useHistory } from 'react-router-dom';\nimport {\n  Nav,\n  NavList,\n  NavItem,\n  NavExpandable,\n  Page,\n  PageHeader,\n  PageSidebar,\n  SkipToContent,\n} from '@patternfly/react-core';\nimport { routes, IAppRoute, IAppRouteGroup } from '@app/Routes';\nimport logo from '@app/images/Patternfly-Logo.svg';\n\ntype AppLayoutProps = {\n  children: React.ReactNode;\n};\n\nconst AppLayout: React.FunctionComponent<AppLayoutProps> = ({ children }) => {\n  const [isNavOpen, setIsNavOpen] = React.useState(true);\n  const [isMobileView, setIsMobileView] = React.useState(true);\n  const [isNavOpenMobile, setIsNavOpenMobile] = React.useState(false);\n  const onNavToggleMobile = () => {\n    setIsNavOpenMobile(!isNavOpenMobile);\n  };\n  const onNavToggle = () => {\n    setIsNavOpen(!isNavOpen);\n  };\n  const onPageResize = (props: { mobileView: boolean; windowSize: number }) => {\n    setIsMobileView(props.mobileView);\n  };\n\n  function LogoImg() {\n    const history = useHistory();\n    function handleClick() {\n      history.push('/');\n    }\n    return <img src={logo} onClick={handleClick} alt=\"PatternFly Logo\" />;\n  }\n\n  const Header = (\n    <PageHeader\n      logo={<LogoImg />}\n      showNavToggle\n      isNavOpen={isNavOpen}\n      onNavToggle={isMobileView ? onNavToggleMobile : onNavToggle}\n    />\n  );\n\n  const location = useLocation();\n\n  const renderNavItem = (route: IAppRoute, index: number) => (\n    <NavItem key={`${route.label}-${index}`} id={`${route.label}-${index}`}>\n      <NavLink exact={route.exact} to={route.path} activeClassName=\"pf-m-current\">\n        {route.label}\n      </NavLink>\n    </NavItem>\n  );\n\n  const renderNavGroup = (group: IAppRouteGroup, groupIndex: number) => (\n    <NavExpandable\n      key={`${group.label}-${groupIndex}`}\n      id={`${group.label}-${groupIndex}`}\n      title={group.label}\n      isActive={group.routes.some((route) => route.path === location.pathname)}\n    >\n      {group.routes.map((route, idx) => route.label && renderNavItem(route, idx))}\n    </NavExpandable>\n  );\n\n  const Navigation = (\n    <Nav id=\"nav-primary-simple\" theme=\"dark\">\n      <NavList id=\"nav-list-simple\">\n        {routes.map(\n          (route, idx) => route.label && (!route.routes ? renderNavItem(route, idx) : renderNavGroup(route, idx))\n        )}\n      </NavList>\n    </Nav>\n  );\n\n  const Sidebar = <PageSidebar theme=\"dark\" nav={Navigation} isNavOpen={isMobileView ? isNavOpenMobile : isNavOpen} />;\n\n  const pageId = 'primary-app-container';\n\n  const PageSkipToContent = (\n    <SkipToContent\n      onClick={(event) => {\n        event.preventDefault();\n        const primaryContentContainer = document.getElementById(pageId);\n        primaryContentContainer && primaryContentContainer.focus();\n      }}\n      href={`#${pageId}`}\n    >\n      Skip to Content\n    </SkipToContent>\n  );\n  return (\n    <Page\n      mainContainerId={pageId}\n      header={Header}\n      sidebar={Sidebar}\n      onPageResize={onPageResize}\n      skipToContent={PageSkipToContent}\n    >\n      {children}\n    </Page>\n  );\n};\n\nexport { AppLayout };\n","import Keycloak, { KeycloakInstance, KeycloakTokenParsed } from 'keycloak-js';\n\nexport let keycloak: KeycloakInstance | undefined;\n\n/**\n * Get keycloak instance\n *\n * @return an initiated keycloak instance or `undefined`\n * if keycloak isn't configured\n *\n */\nexport const getKeycloakInstance = async (): Promise<KeycloakInstance | undefined> => {\n  if (!keycloak) await init();\n  return keycloak;\n};\n\n/**\n * Initiate keycloak instance.\n *\n * Set keycloak to undefined if\n * keycloak isn't configured\n *\n */\nexport const init = async (): Promise<void> => {\n  try {\n    keycloak = Keycloak();\n    if (keycloak) {\n      await keycloak.init({\n        onLoad: 'login-required',\n      });\n    }\n  } catch {\n    keycloak = undefined;\n    console.warn('Auth: Unable to initialize keycloak. Client side will not be configured to use authentication');\n  }\n};\n\n/**\n * Use keycloak update token function to retrieve\n * keycloak token\n *\n * @return keycloak token or empty string if keycloak\n * isn't configured\n *\n */\nexport const getKeyCloakToken = async (): Promise<string> => {\n  await keycloak?.updateToken(50);\n  if (keycloak?.token) return keycloak.token;\n  console.error('No keycloak token available');\n  return 'foo';\n};\n\n/**\n * Use keycloak update token function to retrieve\n * keycloak token\n *\n * @return keycloak token or empty string if keycloak\n * isn't configured\n *\n */\nexport const getParsedKeyCloakToken = async (): Promise<KeycloakTokenParsed> => {\n  await keycloak?.updateToken(50);\n  if (keycloak?.tokenParsed) return keycloak.tokenParsed;\n  console.error('No keycloak token available');\n  return {} as KeycloakTokenParsed;\n};\n\n/**\n * logout of keycloak, clear cache and offline store then redirect to\n * keycloak login page\n *\n * @param keycloak the keycloak instance\n * @param client offix client\n *\n */\nexport const logout = async (keycloak: Keycloak.KeycloakInstance | undefined): Promise<void> => {\n  if (keycloak) {\n    await keycloak.logout();\n  }\n};\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { I18nextProvider } from 'react-i18next';\nimport '@patternfly/react-core/dist/styles/base.css';\nimport '@patternfly/patternfly/patternfly.min.css';\nimport '@patternfly/patternfly/utilities/Accessibility/accessibility.css';\nimport '@patternfly/patternfly/utilities/Sizing/sizing.css';\nimport '@patternfly/patternfly/utilities/Spacing/spacing.css';\nimport '@patternfly/patternfly/utilities/Display/display.css';\nimport '@patternfly/patternfly/utilities/Flex/flex.css';\nimport { AppLayout } from '@app/AppLayout/AppLayout';\nimport { AppRoutes } from '@app/Routes';\nimport { MASErrorBoundary, MASLoading, RootModal, AlertProvider } from '@app/components';\nimport srsi18n from '@i18n/i18n';\nimport { KeycloakAuthProvider, KeycloakContext, getKeycloakInstance } from './auth';\nimport { Config, ConfigContext, BasenameContext } from '@bf2/ui-shared';\nimport '@app/App.css';\n\ndeclare const __BASE_PATH__: string;\nlet keycloak: Keycloak.KeycloakInstance | undefined;\n\nconst App: React.FunctionComponent = () => {\n  const [initialized, setInitialized] = React.useState(false);\n\n  // Initialize the client\n  useEffect(() => {\n    const init = async () => {\n      keycloak = await getKeycloakInstance();\n      setInitialized(true);\n    };\n    init();\n  }, []);\n\n  if (!initialized) return <MASLoading />;\n\n  return (\n    <ConfigContext.Provider\n      value={\n        {\n          srs: {\n            apiBasePath: __BASE_PATH__,\n          },\n        } as Config\n      }\n    >\n      <BasenameContext.Provider value={{ getBasename: () => '' }}>\n        <I18nextProvider i18n={srsi18n}>\n          <AlertProvider>\n            <KeycloakContext.Provider value={{ keycloak, profile: keycloak?.profile }}>\n              <KeycloakAuthProvider>\n                <Router>\n                  <React.Suspense fallback={<MASLoading />}>\n                    <MASErrorBoundary>\n                      <RootModal>\n                        <AppLayout>\n                          <AppRoutes />\n                        </AppLayout>\n                      </RootModal>\n                    </MASErrorBoundary>\n                  </React.Suspense>\n                </Router>\n              </KeycloakAuthProvider>\n            </KeycloakContext.Provider>\n          </AlertProvider>\n        </I18nextProvider>\n      </BasenameContext.Provider>\n    </ConfigContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { KeycloakInstance, KeycloakProfile } from 'keycloak-js';\nimport { getKeyCloakToken, getParsedKeyCloakToken } from './keycloakAuth';\nimport { Auth, AuthContext } from '@bf2/ui-shared';\n\n// This is a context which can manage the keycloak\nexport interface IKeycloakContext {\n  keycloak?: KeycloakInstance | undefined;\n  profile?: KeycloakProfile | undefined;\n}\n\nexport const KeycloakContext = React.createContext<IKeycloakContext>({ keycloak: undefined });\n\nexport const KeycloakAuthProvider: React.FunctionComponent = (props) => {\n  const getUsername = () => {\n    return getParsedKeyCloakToken().then((token) => token['username']);\n  };\n\n  const isOrgAdmin = () => {\n    return getParsedKeyCloakToken().then((token) => token['is_org_admin']);\n  };\n\n  const authTokenContext = {\n    srs: {\n      getToken: getKeyCloakToken,\n    },\n    getUsername: getUsername,\n    isOrgAdmin\n  } as Auth;\n  return <AuthContext.Provider value={authTokenContext}>{props.children}</AuthContext.Provider>;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from '@app/App';\n\nif (process.env.NODE_ENV !== 'production') {\n  const config = {\n    rules: [\n      {\n        id: 'color-contrast',\n        enabled: false,\n      },\n    ],\n  };\n  // eslint-disable-next-line @typescript-eslint/no-var-requires, no-undef\n  const axe = require('react-axe');\n  axe(React, ReactDOM, 1000, config);\n}\n\nReactDOM.render(<App />, document.getElementById('root') as HTMLElement);\n"],"names":["MASPageNotFound","t","useTranslation","PageSection","padding","default","isFilled","emptyStateProps","variant","titleProps","title","emptyStateBodyProps","body","history","useHistory","Button","onClick","push","AlertProvider","children","useState","alerts","setAlerts","timers","setTimers","useEffect","timersKeys","map","timer","key","timeOuts","filter","alert","includes","id","timeOut","setTimeout","hideAlert","forEach","clearTimeout","el","AlertContext","value","addAlert","props","Date","getTime","toString","MASAlertToastGroup","onCloseAlert","AlertGroup","isToast","description","dataTestId","rest","Alert","isLiveRegion","AlertVariant","variantLabel","actionClose","AlertActionCloseButton","onClose","state","hasError","onClickButton","setState","getDerivedStateFromError","_","componentDidCatch","error","errorInfo","console","render","this","MASEmptyState","emptyStateIconProps","className","Component","MASErrorBoundaryComponent","withRouter","withTranslation","useDocumentTitle","originalTitle","document","accessibleRouteChangeHandler","window","mainContainer","getElementById","focus","getModalAppendTo","querySelector","MAX_SERVICE_REGISTRY_NAME_LENGTH","MAX_SERVICE_REGISTRY_DESC_LENGTH","statusOptions","label","getFormattedDate","date","translatePostfix","formatDistance","routeFocusTimer","ServiceRegistry","auth","useAuth","basePath","useConfig","showModal","location","useLocation","searchParams","URLSearchParams","search","page","parseInt","get","perPage","isExpandedDrawer","setIsExpandedDrawer","undefined","selectedRegistryInstance","setSelectedRegistryInstance","notRequiredDrawerContentBackground","isUnauthorizedUser","registries","setRegistries","registryItems","setRegistryItems","loggedInUser","setLoggedInUser","orderBy","setOrderBy","fetchRegistries","getUsername","then","username","updateServiceRegistryInstance","callback","delay","savedCallback","length","selectedRegistryItem","registry","newState","srs","getToken","accessToken","RegistriesApi","Configuration","getRegistries","res","data","items","catch","useRef","current","clearInterval","onConnectToRegistry","instance","onDeleteRegistry","name","status","serviceRegistryStatus","selectedItemData","confirmButtonProps","textProps","createServiceRegistry","fetchServiceRegistries","getAccessToServiceRegistry","PageSectionVariants","isExpanded","isLoading","serviceRegistryDetails","serviceRegistryItems","total","onViewConnection","onDelete","expectedTotal","currentUserRegistries","handleCreateModal","refresh","registryDataLoaded","isDrawerOpen","onCreateserviceRegistry","routes","component","exact","path","RouteWithTitleUpdates","isAsync","lastNavigation","useLastLocation","useA11yRouteChange","Route","routeProps","PageNotFound","flattenedRoutes","reduce","flattened","route","AppRoutes","LastLocationProvider","Switch","idx","keycloak","AppLayout","isNavOpen","setIsNavOpen","isMobileView","setIsMobileView","isNavOpenMobile","setIsNavOpenMobile","Header","PageHeader","logo","src","alt","showNavToggle","onNavToggle","renderNavItem","index","NavItem","NavLink","to","activeClassName","Navigation","Nav","theme","NavList","group","groupIndex","NavExpandable","isActive","some","pathname","Sidebar","PageSidebar","nav","pageId","PageSkipToContent","SkipToContent","event","preventDefault","primaryContentContainer","href","Page","mainContainerId","header","sidebar","onPageResize","mobileView","skipToContent","getKeycloakInstance","Promise","init","onLoad","warn","getKeyCloakToken","updateToken","token","getParsedKeyCloakToken","tokenParsed","KeycloakContext","KeycloakAuthProvider","authTokenContext","isOrgAdmin","AuthContext","initialized","setInitialized","ConfigContext","apiBasePath","__BASE_PATH__","BasenameContext","getBasename","I18nextProvider","i18n","Provider","profile","fallback"],"sourceRoot":""}