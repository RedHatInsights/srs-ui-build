{"version":3,"file":"354.1f631bbd.js","mappings":"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","sources":["webpack://srs-ui/./node_modules/@patternfly/react-icons/dist/js/icons/arrow-right-icon.js","webpack://srs-ui/./node_modules/@patternfly/react-icons/dist/js/icons/wrench-icon.js","webpack://srs-ui/./node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://srs-ui/./node_modules/react/jsx-runtime.js","webpack://srs-ui/./src/ServiceRegistry/components/ServiceRegistryMapping/EmptyState.tsx","webpack://srs-ui/./src/ServiceRegistry/components/ServiceRegistryMapping/Loading.tsx","webpack://srs-ui/./src/ServiceRegistry/components/ServiceRegistryMapping/ServiceRegistryMapping.tsx","webpack://srs-ui/./src/ServiceRegistry/components/ServiceRegistryMapping/ServiceRegistryMappingFederated.tsx"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.ArrowRightIconConfig = {\n  name: 'ArrowRightIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ArrowRightIcon = require('../createIcon').createIcon(exports.ArrowRightIconConfig);\nexports[\"default\"] = exports.ArrowRightIcon;","\"use strict\"\nexports.__esModule = true;\nexports.WrenchIconConfig = {\n  name: 'WrenchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.WrenchIcon = require('../createIcon').createIcon(exports.WrenchIconConfig);\nexports[\"default\"] = exports.WrenchIcon;","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  EmptyState as PFEmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateSecondaryActions,\n  ClipboardCopy,\n  Title,\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons/dist/js/icons/wrench-icon';\nimport { ArrowRightIcon } from '@patternfly/react-icons/dist/js/icons/arrow-right-icon';\n\nexport type EmptyStateProps = {\n  topicName: string;\n  basename: string;\n};\n\nexport const EmptyState: FC<EmptyStateProps> = ({\n  topicName,\n  basename,\n}: EmptyStateProps) => {\n  const { t } = useTranslation('service-registry');\n\n  return (\n    <PFEmptyState className='pf-u-pt-2xl pf-u-pt-3xl-on-md'>\n      <EmptyStateIcon icon={WrenchIcon} />\n      <Title headingLevel='h2' size='lg'>\n        {t('empty_state_title')}\n      </Title>\n      <EmptyStateBody>{t('empty_state_body')}</EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        <ClipboardCopy\n          isReadOnly\n          hoverTip='Copy'\n          clickTip='Copied'\n          className='pf-u-w-25'\n        >\n          {topicName + '-value'}\n        </ClipboardCopy>\n      </EmptyStateSecondaryActions>\n      <EmptyStateSecondaryActions>\n        <ClipboardCopy\n          isReadOnly\n          hoverTip='Copy'\n          clickTip='Copied'\n          className='pf-u-w-25'\n        >\n          {topicName + '-key'}\n        </ClipboardCopy>\n      </EmptyStateSecondaryActions>\n      <EmptyStateSecondaryActions>\n        <Link to={basename}>\n          {t('go_to_service_registry_instance_helper_text')} <ArrowRightIcon />\n        </Link>\n      </EmptyStateSecondaryActions>\n    </PFEmptyState>\n  );\n};\n","import { FC } from 'react';\nimport {\n  EmptyState as PFEmptyState,\n  EmptyStateSecondaryActions,\n  Bullseye,\n  Spinner,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { css } from '@patternfly/react-styles';\n\nexport const Loading: FC = () => {\n  const { t } = useTranslation('service-registry');\n\n  return (\n    <PFEmptyState className={css('pf-u-pt-2xl pf-u-pt-3xl-on-md')}>\n      <EmptyStateSecondaryActions>\n        <Bullseye>\n          <Spinner size='xl' />\n        </Bullseye>\n      </EmptyStateSecondaryActions>\n      <EmptyStateSecondaryActions>\n        <TextContent>\n          <Text component={TextVariants.h1}>{t('schema_loading')}</Text>\n        </TextContent>\n      </EmptyStateSecondaryActions>\n    </PFEmptyState>\n  );\n};\n","import {\n  useEffect,\n  useState,\n  memo,\n  FunctionComponent,\n  useCallback,\n} from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Select,\n  SelectVariant,\n  SelectOption,\n  Card,\n  CardTitle,\n  CardBody,\n  Grid,\n  GridItem,\n  SelectOptionObject,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Configuration,\n  Registry,\n  RegistriesApi,\n} from '@rhoas/registry-management-sdk';\nimport { useAuth, useConfig } from '@rhoas/app-services-ui-shared';\nimport { EmptyState } from './EmptyState';\nimport { Loading } from './Loading';\n\nexport type ServiceRegistryMappingProps = SchemasProps & {\n  basename: string;\n  topicName: string;\n};\n\ntype SchemasProps = {\n  renderSchema: (registry: Registry | undefined) => JSX.Element;\n  registry?: Registry | undefined;\n};\n\nconst Schemas: FunctionComponent<SchemasProps> = memo(\n  ({ renderSchema, registry }) => {\n    return (renderSchema && registry && renderSchema(registry)) || <></>;\n  }\n);\nSchemas.displayName = 'Schemas';\n\nexport const ServiceRegistryMapping: React.FC<ServiceRegistryMappingProps> = ({\n  renderSchema,\n  basename,\n  topicName,\n}) => {\n  const { t } = useTranslation('service-registry');\n  const auth = useAuth();\n  const {\n    srs: { apiBasePath: basePath },\n  } = useConfig() || { srs: { apiBasePath: '' } };\n  //states\n  const [registryItems, setRegistryItems] = useState<Registry[] | undefined>(\n    undefined\n  );\n  const [selectedRegistry, setSelectedRegistry] = useState<\n    string | SelectOptionObject\n  >();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [registry, setRegistry] = useState<Registry>();\n\n  const fetchRegistries = useCallback(async () => {\n    let page = 1;\n    const pageSize = 100;\n\n    const accessToken = await auth?.srs.getToken();\n    const api = new RegistriesApi(\n      new Configuration({\n        accessToken,\n        basePath,\n      })\n    );\n    /**\n     * Api works based on pagination and return 10 records by default.\n     * Getting data by calling api mupltiple times based on page size 100 if total is greater than 100.\n     */\n    const items = await (async (): Promise<Registry[]> => {\n      const response = await api.getRegistries(page, pageSize);\n      let { items } = response?.data;\n      const { total } = response?.data;\n\n      if (total > pageSize) {\n        const n = Math.ceil(total / pageSize);\n        for (let i = 1; i < n; i++) {\n          page += 1;\n          const response = await api.getRegistries(page, pageSize);\n          items = items?.concat(response?.data.items);\n        }\n        return items;\n      } else {\n        return items;\n      }\n    })();\n\n    setRegistryItems(items);\n  }, [auth?.srs, basePath]);\n\n  useEffect(() => {\n    fetchRegistries();\n  }, [fetchRegistries]);\n\n  useEffect(() => {\n    const filteredRegistry = registryItems?.filter(\n      (r) => r.name === selectedRegistry\n    )[0];\n    setRegistry(filteredRegistry);\n  }, [selectedRegistry, registryItems]);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelectInstance = (\n    event: React.MouseEvent<Element, MouseEvent> | React.ChangeEvent<Element>,\n    selection: string | SelectOptionObject\n  ) => {\n    event?.preventDefault();\n    setSelectedRegistry(selection);\n    setIsOpen(false);\n  };\n\n  const onClearSchema = () => {\n    setSelectedRegistry(undefined);\n  };\n\n  if (registryItems === undefined) {\n    return <Loading />;\n  }\n\n  if (!registryItems?.length) {\n    return <EmptyState topicName={topicName} basename={basename} />;\n  } else {\n    return (\n      <Stack hasGutter>\n        <StackItem>\n          <Card>\n            <CardTitle component='h2'>\n              {t('service_registry_instance')}\n            </CardTitle>\n            <CardBody>\n              <Grid hasGutter rowSpan={2}>\n                <GridItem>\n                  {' '}\n                  <Select\n                    id='registry-mapping-select'\n                    variant={SelectVariant.typeahead}\n                    typeAheadAriaLabel={t('select_instance')}\n                    placeholderText={t('select_instance')}\n                    onToggle={onToggle}\n                    onSelect={onSelectInstance}\n                    selections={selectedRegistry}\n                    isOpen={isOpen}\n                    width={600}\n                    onClear={onClearSchema}\n                  >\n                    {registryItems?.map((r: Registry) => {\n                      return <SelectOption key={r.id} value={r.name} />;\n                    })}\n                  </Select>\n                </GridItem>\n                <GridItem>\n                  <Link to={basename}>\n                    {t('create_service_registry_helper_text')}\n                  </Link>\n                </GridItem>\n              </Grid>\n            </CardBody>\n          </Card>\n        </StackItem>\n        <StackItem>\n          <Schemas renderSchema={renderSchema} registry={registry} />\n        </StackItem>\n      </Stack>\n    );\n  }\n};\n","import { FunctionComponent } from 'react';\nimport {\n  ServiceRegistryMapping,\n  ServiceRegistryMappingProps,\n} from './ServiceRegistryMapping';\n\nconst ServiceRegistryMappingFederated: FunctionComponent<\n  ServiceRegistryMappingProps\n> = ({ renderSchema, basename, topicName }) => {\n  return (\n    <ServiceRegistryMapping\n      renderSchema={renderSchema}\n      basename={basename}\n      topicName={topicName}\n    />\n  );\n};\n\nexport default ServiceRegistryMappingFederated;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","f","g","Fragment","Symbol","for","h","m","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","n","Object","prototype","hasOwnProperty","p","key","ref","__self","__source","q","c","a","k","b","d","e","l","call","defaultProps","$$typeof","type","props","_owner","current","jsx","jsxs","module","EmptyState","topicName","basename","t","useTranslation","className","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","EmptyStateSecondaryActions","ClipboardCopy","isReadOnly","hoverTip","clickTip","Link","to","Loading","css","Bullseye","Spinner","TextContent","Text","component","TextVariants","h1","Schemas","memo","renderSchema","registry","displayName","ServiceRegistryMapping","auth","useAuth","srs","apiBasePath","basePath","useConfig","registryItems","setRegistryItems","useState","undefined","selectedRegistry","setSelectedRegistry","isOpen","setIsOpen","setRegistry","fetchRegistries","useCallback","page","pageSize","accessToken","getToken","api","RegistriesApi","Configuration","items","response","getRegistries","data","total","Math","ceil","i","concat","useEffect","filteredRegistry","filter","r","onToggle","onSelectInstance","event","selection","preventDefault","onClearSchema","length","Stack","hasGutter","StackItem","Card","CardTitle","CardBody","Grid","rowSpan","GridItem","Select","id","variant","SelectVariant","typeahead","typeAheadAriaLabel","placeholderText","onSelect","selections","onClear","map","SelectOption","value"],"sourceRoot":""}